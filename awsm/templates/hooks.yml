vars:
  remote_docker_port: 2375

amazon_linux_base:
  tasks:
    - name: Upgrading all packages
      yum:
        name: '*'
        state: latest
    - name: Installing new yum packages
      yum: name={{ item }} state=latest
      with_items:
        - htop
        - python36
        - python36-setuptools
    - name: Installing pip
      easy_install:
        name: pip
        state: latest
    - name: Installing pip3
      easy_install:
        executable: easy_install-3.6
        name: pip
        state: latest
    - name: Installing python packages
      pip:
        name: '{{ item }}'
        extra_args: '--upgrade'
        executable: /usr/local/bin/pip
      with_items:
        - pip
        - awscli
      environment:
        PATH: '$PATH:/usr/local/bin'

amazon_linux_docker:
  includes:
    - amazon_linux_base
    - prepare_volumes
  tasks:
    - name: Installing Docker
      yum:
        name: docker
        state: latest
    - name: Enabling Docker remote API
      lineinfile:
        path: /etc/sysconfig/docker
        regexp: '^OPTIONS'
        line: 'OPTIONS="--default-ulimit nofile=1024:4096 -H unix:///var/run/docker.sock -H localhost:{{ remote_docker_port }}"'
    - name: Starting Docker daemon
      service:
        name: docker
        state: restarted
        enabled: yes
    - name: Adding user to group docker
      user: name='{{ ansible_ssh_user }}'
            groups=docker
            append=yes
    - name: Installing docker-compose
      pip:
        name: 'docker-compose'
        extra_args: '--upgrade'
        executable: /usr/local/bin/pip
      environment:
        PATH: '$PATH:/usr/local/bin'

prepare_volumes:
  tasks:
    - name: Retrieving unmounted block device suffixes
      shell: comm -23 <(ls /sys/block | sort) <(lsblk --raw -n -o kname,pkname,mountpoint | cut -f1- -d' ' --output-delimiter=',' | awk -F',' '$3!="" {print $2 "\n" $1}' | sort -u)
      args:
        executable: /bin/bash
      register: block_device_suffix
    - name: Unmounted block devices
      debug:
        msg: "{{ block_device_suffix.stdout_lines }}"
    - name: Formatting volumes
      filesystem: dev=/dev/{{ item }} fstype=ext4
      with_items: "{{ block_device_suffix.stdout_lines }}"
      ignore_errors: yes
      register: formatted
    - name: Mounting all volumes
      mount: src={{ item }} path={{ item | regex_replace("^/dev", "/mnt") }} fstype=ext4 state=mounted
      with_items: "{{ formatted.results | map(attribute='invocation.module_args.dev') | list }}"
      ignore_errors: yes
      register: mounted
    - name: Setting permissions on mount points
      file: path={{ item }} state=directory mode=0777
      with_items: "{{ mounted.results | map(attribute='name') | list }}"

on_attach_volume:
  includes:
    - prepare_volumes

on_provision:
  includes:
    - amazon_linux_docker
